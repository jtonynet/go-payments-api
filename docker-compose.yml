name: payments-api

networks:
  payments-network:
    driver: bridge

volumes:
  postgres-data:
    external: false
  test-postgres-data:
    external: false
  redis-data:
    external: false
  prometheus-data:
    external: false
  grafana-data:
    external: false

services:
  postgres:
    image: postgres:16.0-alpine
    container_name: postgres
    hostname: postgres
    environment:
      POSTGRES_USER: api_user
      POSTGRES_PASSWORD: api_pass
      POSTGRES_DB: payments_db
      PGTZ: America/Sao_Paulo
      TZ: America/Sao_Paulo
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U api_user -d payments_db" ]
      interval: 2s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./payments-api/internal/adapter/database/postgres/seeds:/seeds
    command: postgres -c timezone=America/Sao_Paulo
    networks:
      - payments-network

  migrate:
    image: migrate/migrate
    volumes:
      - ./payments-api/internal/adapter/database/postgres/migrations:/migrations
    command: [ "-path", "/migrations", "-database", "postgres://api_user:api_pass@postgres:5432/payments_db?sslmode=disable", "-verbose", "up" ]
    depends_on:
      - postgres
    networks:
      - payments-network

  test-postgres:
    image: postgres:16.0-alpine
    container_name: test-postgres
    hostname: test-postgres
    environment:
      POSTGRES_USER: test_api_user
      POSTGRES_PASSWORD: test_api_pass
      POSTGRES_DB: test_payments_db
      PGTZ: America/Sao_Paulo
      TZ: America/Sao_Paulo
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U test_api_user -d test_payments_db" ]
      interval: 2s
      timeout: 5s
      retries: 5
    ports:
      - "5433:5432"
    volumes:
      - test-postgres-data:/var/lib/postgresql/data
    command: postgres -c timezone=America/Sao_Paulo
    networks:
      - payments-network

  redis:
    container_name: redis
    hostname: redis
    image: redis:6.2-alpine
    ports:
      - 6379:6379
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 30s
      retries: 50
    volumes:
      - redis-data:/data
    networks:
      - payments-network
    command: [ "redis-server", "--notify-keyspace-events", "Ex" ]

  transaction-processor:
    build:
      context: ./payments-api
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - redis
    #container_name: transaction-processor # commented to add replica addition approach in future
    #hostname: transaction-processor       # commented to add replica addition approach in future
    environment:
      SERVICE_NAME: transaction-processor
    ports:
      - "8090:8090"
    volumes:
      - ./payments-api:/usr/src/app/
    tty: true
    networks:
      - payments-network
    command: CompileDaemon -log-prefix=false -build="go build -o /usr/src/app/bin/processor/main /usr/src/app/cmd/processor/main.go" -command="./bin/processor/main"

  transaction-rest:
    build:
      context: ./payments-api
      dockerfile: Dockerfile
    depends_on:
      - transaction-processor
    #container_name: transaction-rest # commented to add replica addition approach in future
    #hostname: transaction-rest       # commented to add replica addition approach in future
    environment:
      SERVICE_NAME: transaction-rest
    ports:
      - "8080:8080"
    volumes:
      - ./payments-api:/usr/src/app/
    tty: true
    networks:
      - payments-network
    command: CompileDaemon -log-prefix=false -build="go build -o /usr/src/app/bin/rest/main /usr/src/app/cmd/rest/main.go" -command="./bin/rest/main"

  pushgateway:
    image: prom/pushgateway:latest
    container_name: pushgateway
    ports:
      - 9091:9091
    networks:
      - payments-network
    depends_on:
      - transaction-processor
      - transaction-rest

  redis-exporter:
    image: oliver006/redis_exporter:v1.6.0-alpine
    ports:
      - 9121:9121
    networks:
      - payments-network
    command:
      - '--redis.addr=redis://redis:6379'
    depends_on:
      - redis

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./tools/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    networks:
      - payments-network
    depends_on:
      - transaction-processor
      - transaction-rest
      - pushgateway
      - redis-exporter

  loki:
    image: grafana/loki:latest
    ports:
      - 3100:3100
    volumes:
      - ./tools/loki/loki-config.yml:/etc/loki/loki-config.yaml
    networks:
      - payments-network

  promtail:
    image: grafana/promtail:latest
    ports:
      - 9080:9080
    volumes:
      - ./tools/promtail/promtail-config.yml:/etc/promtail/promtail-config.yaml
    networks:
      - payments-network
    depends_on:
      - loki

  grafana:
    image: grafana/grafana
    container_name: grafana
    volumes:
      - grafana-data:/var/lib/grafana
    ports:
      - 3000:3000
    networks:
      - payments-network
    depends_on:
      - prometheus
      - loki

  gatling:
    build:
      context: ./tests/gatling
      dockerfile: Dockerfile
    container_name: gatling
    hostname: gatling
    env_file:
      - ./payments-api/.env
    ports:
      - "9099:9099"
    depends_on:
      - transaction-processor
      - transaction-rest
    volumes:
      - ./tests/gatling/user-files:/usr/src/app/user-files
      - ./tests/gatling/results:/usr/src/app/results
      - ./tests/gatling/results/history:/usr/src/app/results/history
      - ./tests/gatling/results/latest:/usr/src/app/results/latest
    networks:
      - payments-network
