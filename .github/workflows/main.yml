name: CI

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]

env:
  TZ : America/Sao_Paulo
  ENV: test
  API_TIMEOUT_SLA_IN_MS: 100

  DATABASE_STRATEGY: gorm
  DATABASE_DRIVER: postgres
  DATABASE_HOST: postgres
  DATABASE_USER: test_api_user
  DATABASE_PASSWORD: test_api_pass
  DATABASE_DB: test_payments_db
  DATABASE_PORT: 5432
  DATABASE_SSLMODE: disable

  PUBSUB_STRATEGY: redis
  PUBSUB_HOST: redis-payments
  PUBSUB_PORT: 6379
  PUBSUB_DB: 1
  PUBSUB_PROTOCOL: 3

  LOCK_IN_MEMORY_STRATEGY: redis
  LOCK_IN_MEMORY_HOST: redis
  LOCK_IN_MEMORY_PORT: 6379
  LOCK_IN_MEMORY_DB: 1
  LOCK_IN_MEMORY_PROTOCOL: 3
  LOCK_IN_MEMORY_EXPIRATION_DEFAULT_IN_MS: 100

  CACHE_IN_MEMORY_STRATEGY: redis
  CACHE_IN_MEMORY_HOST: redis
  CACHE_IN_MEMORY_PORT: 6379
  CACHE_IN_MEMORY_DB: 0
  CACHE_IN_MEMORY_PROTOCOL: 3
  CACHE_IN_MEMORY_EXPIRATION_DEFAULT_IN_MS: 50000

  GRPC_SERVER_PROCESSOR_HOST: payment-transaction-processor
  GRPC_SERVER_PROCESSOR_PORT: 9090

  LOG_STRATEGY: slog   
  LOG_LEVEL: debug     
  LOG_OPT_FORMAT: json 
  LOG_OPT_ADD_SOURCE: 0

jobs:
  test:
    runs-on: ubuntu-latest
    container: golang:1.23-alpine

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: test_api_user
          POSTGRES_PASSWORD: test_api_pass
          POSTGRES_DB: test_payments_db
          PGTZ: America/Sao_Paulo
          TZ: America/Sao_Paulo

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
         go-version: 1.23

    - name: Configure Redis Keyspace Notifications
      run: |
        apk add --no-cache redis
        redis-cli -h redis -p 6379 CONFIG SET notify-keyspace-events Ex

    - name: Install dependencies
      working-directory: ./payments-api
      run: go mod download

    - name: Build Docker image for payment-transaction-processor
      run: |
        docker build -t payment-transaction-processor ./payments-api

    - name: Run payment-transaction-processor
      run: |
        # Rodar o container em segundo plano
        docker run -d \
          -e TZ=${{ env.TZ }} \
          -e ENV=${{ env.ENV }} \
          -e DATABASE_STRATEGY=${{ env.DATABASE_STRATEGY }} \
          -e DATABASE_DRIVER=${{ env.DATABASE_DRIVER }} \
          -e DATABASE_HOST=${{ env.DATABASE_HOST }} \
          -e DATABASE_USER=${{ env.DATABASE_USER }} \
          -e DATABASE_PASSWORD=${{ env.DATABASE_PASSWORD }} \
          -e DATABASE_DB=${{ env.DATABASE_DB }} \
          -e DATABASE_PORT=${{ env.DATABASE_PORT }} \
          -e DATABASE_SSLMODE=${{ env.DATABASE_SSLMODE }} \
          -e PUBSUB_STRATEGY=${{ env.PUBSUB_STRATEGY }} \
          -e PUBSUB_HOST=${{ env.PUBSUB_HOST }} \
          -e PUBSUB_PORT=${{ env.PUBSUB_PORT }} \
          -e PUBSUB_DB=${{ env.PUBSUB_DB }} \
          -e PUBSUB_PROTOCOL=${{ env.PUBSUB_PROTOCOL }} \
          -e LOCK_IN_MEMORY_STRATEGY=${{ env.LOCK_IN_MEMORY_STRATEGY }} \
          -e LOCK_IN_MEMORY_HOST=${{ env.LOCK_IN_MEMORY_HOST }} \
          -e LOCK_IN_MEMORY_PORT=${{ env.LOCK_IN_MEMORY_PORT }} \
          -e LOCK_IN_MEMORY_DB=${{ env.LOCK_IN_MEMORY_DB }} \
          -e LOCK_IN_MEMORY_PROTOCOL=${{ env.LOCK_IN_MEMORY_PROTOCOL }} \
          -e LOCK_IN_MEMORY_EXPIRATION_DEFAULT_IN_MS=${{ env.LOCK_IN_MEMORY_EXPIRATION_DEFAULT_IN_MS }} \
          -e CACHE_IN_MEMORY_STRATEGY=${{ env.CACHE_IN_MEMORY_STRATEGY }} \
          -e CACHE_IN_MEMORY_HOST=${{ env.CACHE_IN_MEMORY_HOST }} \
          -e CACHE_IN_MEMORY_PORT=${{ env.CACHE_IN_MEMORY_PORT }} \
          -e CACHE_IN_MEMORY_DB=${{ env.CACHE_IN_MEMORY_DB }} \
          -e CACHE_IN_MEMORY_PROTOCOL=${{ env.CACHE_IN_MEMORY_PROTOCOL }} \
          -e CACHE_IN_MEMORY_EXPIRATION_DEFAULT_IN_MS=${{ env.CACHE_IN_MEMORY_EXPIRATION_DEFAULT_IN_MS }} \
          -e GRPC_SERVER_PROCESSOR_HOST=${{ env.GRPC_SERVER_PROCESSOR_HOST }} \
          -e GRPC_SERVER_PROCESSOR_PORT=${{ env.GRPC_SERVER_PROCESSOR_PORT }} \
          -e LOG_STRATEGY=${{ env.LOG_STRATEGY }} \
          -e LOG_LEVEL=${{ env.LOG_LEVEL }} \
          -e LOG_OPT_FORMAT=${{ env.LOG_OPT_FORMAT }} \
          -e LOG_OPT_ADD_SOURCE=${{ env.LOG_OPT_ADD_SOURCE }} \
          -p 9090:9090 \
          payment-transaction-processor

    - name: Sleep for 10 seconds
      run: sleep 10

    - name: Run2 payment-transaction-processor
      run: docker exec payment-transaction-processor go run ./cmd/processor/main.go

    - name: Sleep for 10 seconds
      run: sleep 10

    - name: Test
      working-directory: ./payments-api
      run: ENV=test go test -v ./internal/adapter/repository/gormRepos ./internal/adapter/repository/redisRepos ./internal/core/service ./internal/adapter/http/router
